# Generated by Django 5.2.2 on 2025-06-20 11:15

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('contrats', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Swap',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('battery_moto_user_association_id', models.BigIntegerField()),
                ('battery_in_id', models.BigIntegerField()),
                ('battery_out_id', models.BigIntegerField()),
                ('swap_price', models.DecimalField(decimal_places=2, max_digits=8, null=True)),
                ('swap_date', models.DateTimeField()),
                ('nom', models.CharField(max_length=255, null=True)),
                ('prenom', models.CharField(max_length=255, null=True)),
                ('phone', models.CharField(max_length=20, null=True)),
                ('created_at', models.DateTimeField(null=True)),
                ('updated_at', models.DateTimeField(null=True)),
                ('battery_out_soc', models.CharField(max_length=255, null=True)),
                ('battery_in_soc', models.CharField(max_length=255, null=True)),
                ('agent_user_id', models.BigIntegerField()),
                ('id_agence', models.BigIntegerField()),
            ],
            options={
                'db_table': 'swaps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReglePenalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_regle', models.CharField(max_length=100)),
                ('type_contrat', models.CharField(choices=[('combine', 'Moto + Batterie'), ('batterie_seule', 'Batterie uniquement')], max_length=20)),
                ('heure_debut_leger', models.TimeField(help_text='Heure de début pour les pénalités légères (ex: 12:01)')),
                ('heure_debut_grave', models.TimeField(help_text='Heure de début pour les pénalités graves (ex: 14:01)')),
                ('montant_penalite_leger', models.DecimalField(decimal_places=2, help_text='Montant de la pénalité légère', max_digits=10)),
                ('montant_penalite_grave', models.DecimalField(decimal_places=2, help_text='Montant de la pénalité grave', max_digits=10)),
                ('montant_penalite_jour_manque', models.DecimalField(decimal_places=2, default=Decimal('5000.00'), help_text='Montant de la pénalité pour jour manqué', max_digits=10)),
                ('est_active', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'payments_regle_penalite',
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('montant_moto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_batterie', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_paiement', models.DateField()),
                ('date_enregistrement', models.DateTimeField(default=django.utils.timezone.now)),
                ('methode_paiement', models.CharField(choices=[('espece', 'Espèces'), ('mobile_money', 'Mobile Money'), ('virement', 'Virement bancaire'), ('cheque', 'Chèque')], max_length=50)),
                ('reference_transaction', models.CharField(blank=True, max_length=100, null=True)),
                ('type_contrat', models.CharField(choices=[('chauffeur_batterie', 'Contrat Chauffeur & Batterie'), ('partenaire_batterie', 'Contrat Partenaire & Batterie'), ('batterie_uniquement', 'Contrat Batterie Uniquement')], max_length=20)),
                ('statut_paiement', models.CharField(choices=[('complet', 'Paiement complet'), ('partiel', 'Paiement partiel'), ('avance', 'Paiement en avance')], default='complet', max_length=20)),
                ('statut_paiement_batterie', models.CharField(choices=[('complet', 'Paiement complet'), ('partiel', 'Paiement partiel'), ('avance', 'Paiement en avance')], default='complet', max_length=20)),
                ('statut_paiement_moto', models.CharField(choices=[('complet', 'Paiement complet'), ('partiel', 'Paiement partiel'), ('avance', 'Paiement en avance')], default='complet', max_length=20)),
                ('est_penalite', models.BooleanField(default=False)),
                ('inclut_penalites', models.BooleanField(default=False, help_text='Indique si ce paiement inclut des pénalités existantes')),
                ('montant_penalites_inclus', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('heure_paiement', models.TimeField(blank=True, help_text='Heure à laquelle le paiement a été effectué', null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('contrat_batterie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='contrats.contratbatterie')),
                ('contrat_chauffeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='contrats.contratchauffeur')),
                ('contrat_partenaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='contrats.contratpartenaire')),
                ('enregistre_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_enregistres', to=settings.AUTH_USER_MODEL)),
                ('user_agence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='authentication.useragence')),
            ],
            options={
                'db_table': 'payments_paiement',
                'ordering': ['-date_paiement', '-date_enregistrement'],
            },
        ),
        migrations.CreateModel(
            name='Penalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_penalite', models.CharField(choices=[('combine', 'Moto + Batterie'), ('batterie_seule', 'Batterie uniquement')], default='combine', max_length=20)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('montant_payé', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date_creation', models.DateTimeField(default=django.utils.timezone.now)),
                ('motif', models.CharField(choices=[('retard_paiement', 'Retard de paiement (12h-14h)'), ('retard_grave', 'Retard grave de paiement (après 14h)'), ('absence_non_justifiee', 'Absence non justifiée'), ('autre', 'Autre')], max_length=50)),
                ('description', models.TextField(blank=True, null=True)),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('payee', 'Payée'), ('annulee', 'Annulée'), ('reportee', 'Reportée')], default='en_attente', max_length=20)),
                ('date_modification', models.DateTimeField(blank=True, null=True)),
                ('date_paiement_manque', models.DateField(blank=True, help_text="Date du paiement qui n'a pas été effectué à temps", null=True)),
                ('contrat_reference', models.CharField(blank=True, help_text='Référence du contrat concerné', max_length=100, null=True)),
                ('raison_annulation', models.TextField(blank=True, help_text="Raison du pardon ou de l'annulation de la pénalité", null=True)),
                ('date_pardon', models.DateTimeField(blank=True, help_text='Date à laquelle la pénalité a été pardonnée', null=True)),
                ('contrat_batterie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalites', to='contrats.contratbatterie')),
                ('contrat_chauffeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalites', to='contrats.contratchauffeur')),
                ('contrat_partenaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='penalites', to='contrats.contratpartenaire')),
                ('cree_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='penalites_creees', to=settings.AUTH_USER_MODEL)),
                ('modifie_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='penalites_modifiees', to=settings.AUTH_USER_MODEL, verbose_name='Modifié par')),
                ('pardonnee_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='penalites_pardonnees', to=settings.AUTH_USER_MODEL, verbose_name='Pardonnée par')),
            ],
            options={
                'db_table': 'payments_penalite',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='PaiementPenalite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(max_length=100, unique=True)),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_paiement', models.DateField()),
                ('date_enregistrement', models.DateTimeField(default=django.utils.timezone.now)),
                ('methode_paiement', models.CharField(choices=[('espece', 'Espèces'), ('mobile_money', 'Mobile Money'), ('virement', 'Virement bancaire'), ('cheque', 'Chèque')], max_length=50)),
                ('reference_transaction', models.CharField(blank=True, max_length=100, null=True)),
                ('enregistre_par', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('penalite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='payments.penalite')),
            ],
            options={
                'db_table': 'payments_paiementpenalite',
                'ordering': ['-date_paiement', '-date_enregistrement'],
            },
        ),
        migrations.CreateModel(
            name='NotificationPaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_notification', models.CharField(choices=[('rappel', 'Rappel de paiement'), ('retard', 'Alerte de retard'), ('penalite', 'Notification de pénalité'), ('confirmation', 'Confirmation de paiement')], max_length=20)),
                ('message', models.TextField()),
                ('date_programmee', models.DateTimeField()),
                ('statut', models.CharField(choices=[('programmee', 'Programmée'), ('envoyee', 'Envoyée'), ('echouee', 'Échouée')], default='programmee', max_length=20)),
                ('date_envoi', models.DateTimeField(blank=True, null=True)),
                ('raison_echec', models.TextField(blank=True, null=True)),
                ('canal_notification', models.CharField(choices=[('sms', 'SMS'), ('whatsapp', 'WhatsApp'), ('app', 'Application mobile'), ('email', 'Email'), ('appel', 'Appel téléphonique')], default='sms', max_length=20)),
                ('est_lue', models.BooleanField(default=False)),
                ('date_lecture', models.DateTimeField(blank=True, null=True)),
                ('chauffeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contrats.validateduser')),
                ('contrat_batterie', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='contrats.contratbatterie')),
                ('contrat_chauffeur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='contrats.contratchauffeur')),
                ('contrat_partenaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='contrats.contratpartenaire')),
                ('partenaire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='contrats.partenaire')),
                ('penalite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='payments.penalite')),
            ],
            options={
                'db_table': 'payments_notificationpaiement',
                'ordering': ['-date_programmee'],
            },
        ),
    ]
